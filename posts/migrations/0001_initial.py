# Generated by Django 3.2.6 on 2022-01-06 01:18

import accounts.queries
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import helpers.services


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('topics', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('title', models.CharField(max_length=150, verbose_name='title')),
                ('content', models.TextField(verbose_name='content')),
                ('author', models.ForeignKey(on_delete=models.SET(accounts.queries.get_deleted_user), related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('down_votes', models.ManyToManyField(related_name='post_down_votes', to=settings.AUTH_USER_MODEL, verbose_name='up vote')),
                ('tags', models.ManyToManyField(related_name='posts', to='posts.Tag', verbose_name='tags')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='topics.topic', verbose_name='topic')),
                ('up_votes', models.ManyToManyField(related_name='post_up_votes', to=settings.AUTH_USER_MODEL, verbose_name='up vote')),
            ],
            options={
                'abstract': False,
            },
            bases=(helpers.services.VotesModelMixin, models.Model),
        ),
    ]
